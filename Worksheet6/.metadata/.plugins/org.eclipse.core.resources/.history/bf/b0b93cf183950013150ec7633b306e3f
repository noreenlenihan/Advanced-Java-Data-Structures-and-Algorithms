package worksheet6;

public class LinkedQueue<T> implements Queue<T> {
	private class Node {
		T element;
		Node next;

		public Node(T value) {
			element = value;
		}
	}

	private Node front = null;
	private int size = 0;

	public int size() {
		return size;
	}

	public boolean isEmpty() {
		return size == 0;
	}

	public void push(T value) {
		Node n = new Node(value);
		n.next = front;

		front = n;
		size++;
	}

	public T front() {
		if (isEmpty()) {
			throw new QueueEmptyException();
		}
		return front.element;
	}


	public String toString() {
		String out = "[" + size + " element(s)]: ";
		Node n = front;
		while (n != null) {
			out += "[" + n.element + "|-]-> ";
			n = n.next;
		}
		return out;
	}
	

	public void enqueue(T value) {
		// TODO Auto-generated method stub
		
	}

	public T dequeue() {
		if (isEmpty()) {
			throw new QueueEmptyException();
		}
		T toReturn = front.element;

		front = front.next;
		size--;

		return toReturn;
	}

	
	

}
