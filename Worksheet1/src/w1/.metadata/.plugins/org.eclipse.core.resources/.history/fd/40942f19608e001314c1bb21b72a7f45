package ws3;

public class DoubleStack {

	private double [] array = new double[10];
	private int top = 0;
	
	public double size(){
		return top;
	}
	
	public boolean isEmpty(){
		return top == 0;
	}
	
	public boolean isFull(){
		return top == array.length;
	}
	
	public void push(double value) throws StackFullException {
		if(top == array.length) {
			throw new StackFullException("Stack is full");
		}
		array[top++] = value;
	}
	
	public double top() throws StackEmptyException {
		if(top == 0) {
			throw new StackEmptyException("Stack is empty");
		}
		return array[top - 1];
		
	}
	
	public double pop() throws StackEmptyException {
		if(top == 0){
			throw new StackEmptyException("Stack is empty");
		}
		double popped = array[top];
		array[top] = 0.0;
		--top;
		return popped;
	}
	
	public String toString(){
		String out = "[" + top + " / " + array.length + "]";
		
		for(int i= 0; i < array.length; i++){
			out += "  " + array[i];
			
		}
		
		return out;
		}
	

	public static void main(String [] args) throws StackFullException, StackEmptyException{
		DoubleStack stack = new DoubleStack();
		
		
			stack.push(3.2);
			System.out.println(stack);
			
			stack.pop();
			System.out.println(stack.pop());
		
		
}
	
	

}
