package w5;

public class ArrayStack<E> implements Stack<E> {
		
		private E[] array = null;
		private int top = 0;
		
		public ArrayStack() {
			this(20);
		}
		
		public ArrayStack(int capacity) {
			E [] array = (E[])(new ArrayStack[capacity]);
		}
		
		public int size() {
			return top;
		}
		
		public boolean isEmpty() {
			return top == 0;
		}
		
		public void push(E value) {
			if (top == ((E[])array).length) throw new StackFullException();
			((E[])array)[top++] = value;
		}
		
		public E top() {
			if (top == 0) throw new StackEmptyException(); 
			return ((E[])array)[top-1];
		}

		public E pop() {
			if (top == 0) throw new StackEmptyException();
			
			E temp = ((E[])array)[--top];
			((E[])array)[top] = null;
			return temp;
		}
		
		public String toString() {
			String out = "[" + top + " / " + ((E[])array).length + "]";
			for (int i=0; i< ((E[])array).length; i++) {
				out += " " + ((E[])array)[i];
			}
			return out;
		}
		
		public static void main(String[] args) {
			ArrayStack<Object> stack = new ArrayStack<Object>();
			
			stack.push("rem");
			stack.push(2l);
			System.out.println(stack);

			stack.pop();
			System.out.println(stack);
			
			stack.push(4l);
			System.out.println(stack);

			stack.push(3l);
			System.out.println(stack);

			stack.pop();
			System.out.println(stack);
			
			stack.push(6l);
			System.out.println(stack);

			stack.push(12l);
			System.out.println(stack);

			stack.pop();
			System.out.println(stack);
			
			stack.push(5l);
			System.out.println(stack);

			stack.push(9l);
			System.out.println(stack);

			stack.pop();
			System.out.println(stack);

			stack.push(3l);
			System.out.println(stack);
			
			long total = 0;
			int count = 0;
			while (!stack.isEmpty()) {
				total += (Long) stack.pop();
				count++;
			}
			System.out.println("average: " + (total/count));
		

	}
}
